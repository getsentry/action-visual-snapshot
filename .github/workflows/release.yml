name: release

on:
  push:
    branches:
      - main
      - v*

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 16
    - name: yarn install
      run: |
        echo "$(yarn global bin)" >> $GITHUB_PATH
        yarn install --frozen-lockfile
        yarn global add @sentry/cli

    - name: Get version
      id: get-version
      run: echo "::set-output name=version::$(sentry-cli releases propose-version)"

    - run: yarn lint

    - run: yarn test

    - name: build
      env:
        SENTRY_VERSION: ${{ steps.get-version.outputs.version }}
      run: |
        yarn dist
        git config user.email "github-actions-bot@sentry.io"
        git config user.name "github-actions[bot]"
        git add dist
        git add dist/index.js
        git add dist/SnapshotDiffWorker.js
        git add dist/sourcemap-register.js
        git add src/template/index.ts
        # This can fail if `dist` was already run in branch
        (git commit -m "chore(): Updating dist" && git push) || true

    - name: Sentry Release
      env:
        VERSION: ${{ steps.get-version.outputs.version }}
        DEPLOY_START: ${{ steps.deploy.outputs.deploy-start }}
      run: |
        echo "$VERSION"
        now=$(date +%s)
        sentry-cli releases new "$VERSION"
        sentry-cli releases set-commits "$VERSION" --auto
        sentry-cli releases files "$VERSION" upload-sourcemaps './dist'
        sentry-cli releases deploys "$VERSION" new -e production -t $((now-DEPLOY_START))
        sentry-cli releases finalize "$VERSION"
